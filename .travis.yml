language: cpp
sudo: true

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - gcc-7
      env:
        - MATRIX_EVAL="CXX=g++-7 && CC=gcc-7"
    - os: osx
      osx_image: xcode9.4
      env:
        - MATRIX_EVAL="CXX=clang++ && CC=clang"

before_install:
  - eval "${MATRIX_EVAL}"
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      pip install --user cpp-coveralls;
    fi

install:
  # Install a supported cmake version (>= 3.10)
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      curl -o miniconda.sh  https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - conda install -y -c conda-forge cmake armadillo
  - conda install -y -c usgs-astrogeology libcsm

script:
  - mkdir build
  - cd build
  - export VERBOSE=1
  - cmake -DCOVERAGE=ON ..
  - cmake --build .
  - ctest -VV

after_success:
  - |
    if [ "$TRAVIS_OS_NAME" == linux ]; then
      coveralls --root $(dirname $PWD) -i src/ --verbose;
    fi
  - cd ..
  - conda install -y -q conda-build anaconda-client
  - conda config --set anaconda_upload yes
  - conda config --add channels conda-forge
  - conda build --token $CONDA_UPLOAD_TOKEN recipes -q
